#
name: Zip to S3

on:
  push:
    branches: [ "main" ]
    paths: 'scripts/**'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo
  

jobs:
  upload:
    name: Build-zip-upload
    runs-on: ubuntu-latest
    env: 
      AWS_REGION: us-east-1
      BASE_PATH: scripts
      PY_FILENAME: ec2_cleanup.py
      
      
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build Go
      run: |
        cd $BASE_PATH
        go mod init ec2_backup
        go mod tidy   
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build
        
    - name: Create Folders
      run: | 
        cd $BASE_PATH
        mkdir ec2_backup_go
        mv ec2_backup ec2_backup_go/
        mkdir ec2_cleanup
        mv $PY_FILENAME ec2_cleanup/
        
    - name: Zip Go Build
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r ec2_backup.zip scripts/ec2_backup_go
    
    - name: Zip python file
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r ec2_cleanup.zip scripts/ec2_cleanup
      
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_S3 }}
        role-duration-seconds: 900
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Test AWS Creds
      run: aws sts get-caller-identity
      
    - name: upload Zip
      run: |
        ls      
        aws s3 cp ec2_backup.zip ${{ secrets.S3_BUCKET }}
        aws s3 cp ec2_cleanup.zip ${{ secrets.S3_BUCKET }}
        
    - name: List S3
      run: aws s3 ls ${{ secrets.S3_BUCKET }} --recursive --human-readable --summarize
